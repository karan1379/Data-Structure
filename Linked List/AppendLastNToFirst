//Append Last N to First
/*
class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}

	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}

}
* */

public class Solution {
    public static int LengthIterative(LinkedListNode<Integer>head){
		int count=0;
		while(head!=null)
		{
			count++;
			head=head.next;
		}
		return count;
    }
	public static LinkedListNode<Integer> append(LinkedListNode<Integer> head, int n) {
      
        LinkedListNode<Integer> ptr=head;
        LinkedListNode<Integer> ptr1=head;
        int length=LengthIterative(head);
        int i=0;
        while(i<length-n-1)
        {
            ptr=ptr.next;
            i++;
        }
        head=ptr.next;
        ptr.next=null;
        LinkedListNode<Integer>newptr=head;
        while(newptr.next!=null)
        {
            newptr=newptr.next;
        }
        newptr.next=ptr1;
        return head;
        
    }
}
